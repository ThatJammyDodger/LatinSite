@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject IJSRuntime JSRuntime
@using LatinVocabTest.Data
@using Newtonsoft.Json

@page "/results"

<style>
    .clicky{
    margin: -20px -50px;
    width: 100px;
    position:relative;
    top:50%; 
    left:50%;
    }
</style>

<h5>All of the results you have achieved on this site are shown below &nbsp;&nbsp;&nbsp;</h5>

@if (bigger_list is null)
{
    <div class="epicloader"></div>
} else
{
    //<Animate Animation="Animations.FadeLeft" Easing="Easings.EaseOutQuad" Duration="TimeSpan.FromSeconds(1)">       looked bad may re-add in future
        <body>
            <div style="margin: 10px;">
                <div style="margin-top:5px; margin-bottom:20px">
                    <button class="btn btn-danger btn-sm" @onclick="@ClearStuff">Clear all</button>
                    <button class="btn btn-success btn-sm" @onclick="@Cancel">Close</button>
                    <button class="btn btn-primary btn-sm" onclick="window.print();" >Print</button>
                </div>
                <h5>Total score: @bigger_list.totalCorrect/@bigger_list.totalAsked @( 
                    (bigger_list.totalAsked!=0) ? $"- {Math.Round((double)bigger_list.totalCorrect*100/bigger_list.totalAsked,0)}%" : "" 
                )</h5>
                <hr>
                <h5>Full Breakdown:</h5>
                <div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Mode</th>
                                <th>Correct</th>
                                <th>Latin</th>
                                <th>English</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var x in bigger_list.all_results)
                            {
                                string mode = (x.Mode == "Latin to English") ? "L to E" : "E to L";
                                mode += (x.HintsUsed) ? " with hints" : "";
                                string imgSrc = (x.Correct) ? @"images/correct.png" : @"images/incorrect.png";
                                <tr>
                                    <td>@mode</td>
                                    <td> <img src="@imgSrc" style="width: 1.5rem;" /> </td>
                                    <td>@x.In_Latin.Split(',')[0]</td>
                                    <td>@x.In_English</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </body>
    //</Animate>
}



@code {
    [CascadingParameter] BlazoredModalInstance? ModalInstance { get; set; }
    private AllResults? bigger_list;

    protected override async Task OnInitializedAsync()
    {
        bigger_list = JsonConvert.DeserializeObject<AllResults>(await localStore.GetItemAsync<string>("quiz_results"))!;
    }

    void ClearStuff()
    {
        ModalInstance!.CloseAsync(ModalResult.Ok($"true"));
    }
    void Cancel()
    {
        ModalInstance!.CancelAsync();
    }
}
