@inject Blazored.LocalStorage.ILocalStorageService localStore
@using LatinVocabTest.Data
@using Newtonsoft.Json

<style>
    .clicky{
    margin: -20px -50px;
    width: 100px;
    position:relative;
    top:50%; 
    left:50%;
    }
</style>

<h5>All of the results you have achieved on this site are shown below &nbsp;&nbsp;&nbsp;</h5>

@if (bigger_list is null)
{
    <div class="epicloader"></div>
} else
{
    <div style="margin: 10px;">
        <div style="margin-top:5px; margin-bottom:20px">
            <button class="btn btn-danger btn-sm" @onclick="@ClearStuff">Clear all</button>
            <button class="btn btn-success btn-sm" @onclick="@Cancel">Close</button>
        </div>
        <h5>Total score: @bigger_list.totalCorrect/@bigger_list.totalAsked</h5>
        <hr>
        <h5>Full Breakdown:</h5>
        <div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Mode</th>
                        <th>Hints used</th>
                        <th>Correct</th>
                        <th>Latin</th>
                        <th>English</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var x in bigger_list.all_results)
                    {
                        <tr>
                            @if(x.Mode=="Latin to English") { <td>L to E</td> } 
                            else { <td>E to L</td> }
                            <td>@x.HintsUsed</td>
                            <td>@x.Correct</td>
                            <td>@x.In_Latin</td>
                            <td>@x.In_English</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}



@code {
    [CascadingParameter] BlazoredModalInstance? ModalInstance { get; set; }
    private AllResults? bigger_list;

    protected override async Task OnInitializedAsync()
    {
        bigger_list = JsonConvert.DeserializeObject<AllResults>(await localStore.GetItemAsync<string>("quiz_results"))!;
    }

    void ClearStuff()
    {
        ModalInstance!.CloseAsync(ModalResult.Ok($"true"));
    }
    void Cancel()
    {
        ModalInstance!.CancelAsync();
    }
}
